assign-statement constant special-statement input-output-statement simple-statement for-each-statement sign program type boolean-constant compound-statement relation non-zero-number array-declaration statement term factor digit identifier expression if-statement type1 declaration while-statement condition non-zero-digit declaration-list integer-constant letter
! % ( ) * + - / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? A B C D E F G H I J K L M N O P Q R S T U V W X Y Z a b c d e f g h i j k l m n o p q r s t u v w x y z { } $
program
[program]~[declaration-list]; [compound-statement]
[declaration-list]~[declaration]
[declaration-list]~[declaration]; [declaration-list]
[declaration]~[identifier] [type]
[type]~[type1]
[type]~[array-declaration]
[type1]~INTEGER
[type1]~BOOLEAN
[array-declaration]~[identifier] ARRAY<[type1]>
[compound-statement]~[statement]
[compound-statement]~[statement]; [compound-statement]
[statement]~[simple-statement]
[statement]~[special-statement]
[simple-statement]~[assign-statement]
[simple-statement]~[input-output-statement]
[assign-statement]~[identifier] = [expression]
[expression]~[expression] - [term]
[expression]~[expression] + [term]
[expression]~[term]
[term]~[term] * [factor]
[term]~[term] / [factor]
[term]~[term] % [factor]
[term]~[factor]
[factor]~([expression])
[factor]~[identifier]
[factor]~[constant]
[input-output-statement]~READ [identifier]
[input-output-statement]~PRINT [identifier]
[input-output-statement]~PRINT [constant]
[special-statement]~[if-statement]
[special-statement]~[while-statement]
[special-statement]~[for-each-statement]
[if-statement]~? ([condition]) {[compound-statement]}
[if-statement]~? ([condition]) {[compound-statement]} : {[compound-statement]}
[while-statement]~REPEAT ([condition]) {[compound-statement]}
[for-each-statement]~EACH ([declaration] IN [identifier]) {[compound-statement]}
[condition]~[expression] [relation] [expression]
[relation]~<
[relation]~<=
[relation]~==
[relation]~!=
[relation]~>=
[relation]~>
[relation]~AND
[relation]~OR
[constant]~[integer-constant]
[constant]~[boolean-constant]
[integer-constant]~0
[integer-constant]~[non-zero-number]
[integer-constant]~[sign][non-zero-number]
[non-zero-number]~[non-zero-digit]
[non-zero-number]~[non-zero-number][digit]
[sign]~+
[sign]~-
[boolean-constant]~TRUE
[boolean-constant]~FALSE
[identifier]~[letter]
[identifier]~[identifier][letter]
[identifier]~[identifier][digit]
[letter]~A
[letter]~B
[letter]~C
[letter]~D
[letter]~E
[letter]~F
[letter]~G
[letter]~H
[letter]~I
[letter]~J
[letter]~K
[letter]~L
[letter]~M
[letter]~N
[letter]~O
[letter]~P
[letter]~Q
[letter]~R
[letter]~S
[letter]~T
[letter]~U
[letter]~V
[letter]~W
[letter]~X
[letter]~Y
[letter]~Z
[letter]~a
[letter]~b
[letter]~c
[letter]~d
[letter]~e
[letter]~f
[letter]~g
[letter]~h
[letter]~i
[letter]~j
[letter]~k
[letter]~l
[letter]~m
[letter]~n
[letter]~o
[letter]~p
[letter]~q
[letter]~r
[letter]~s
[letter]~t
[letter]~u
[letter]~v
[letter]~w
[letter]~x
[letter]~y
[letter]~z
[digit]~0
[digit]~[non-zero-digit]
[non-zero-digit]~1
[non-zero-digit]~2
[non-zero-digit]~3
[non-zero-digit]~4
[non-zero-digit]~5
[non-zero-digit]~6
[non-zero-digit]~7
[non-zero-digit]~8
[non-zero-digit]~9